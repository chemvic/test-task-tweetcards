{"version":3,"file":"static/js/37.8b01be0c.chunk.js","mappings":"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","sources":["webpack://test-task-tweetcards/./src/pages/Tweets/Tweets.module.css?3fe9","webpack://test-task-tweetcards/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","webpack://test-task-tweetcards/./src/components/LoadMoreButton/LoadMoreButton.module.css?ca48","components/LoadMoreButton/LoadMoreButton.js","webpack://test-task-tweetcards/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","redux/users/selectors.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Tweets_users__fJFGO\",\"container\":\"Tweets_container__ird65\",\"users_item\":\"Tweets_users_item__rXHKR\",\"button\":\"Tweets_button__H9kRc\",\"buttons\":\"Tweets_buttons__5t9iO\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__IV4TN\",\"avatar\":\"Card_avatar__AcpZa\"};","import PropTypes from 'prop-types';\r\nimport {toggleFollow} from 'redux/following/followSlice';\r\nimport { updateUser } from 'redux/users/operations';\r\n// import {selectIsFollowed} from 'redux/following/selectors';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport { changeFollowers } from 'redux/users/usersSlice';\r\nimport css from './Card.module.css';\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    isFollowed\r\n    }) => {\r\n        const dispatch=useDispatch();\r\n        const followed=useSelector((state) => state.follow[id]);\r\n\r\n        let newData={};\r\n\r\n        if(!isFollowed){\r\n             newData={\r\n                \r\n                    followers:700,\r\n                    isFollowed: true,\r\n                  \r\n            }\r\n        }else{\r\n            newData={\r\n                \r\n                    followers:700,\r\n                    isFollowed: false,\r\n            \r\n        }}\r\n    \r\n        const handleClick = () => {\r\n      \r\n            dispatch(toggleFollow(id));\r\n        //     dispatch(updateUser(id, {\r\n                \r\n        //         followers:700,\r\n        //         isFollowed: true,\r\n              \r\n        // }));\r\n           \r\n            dispatch(changeFollowers({ id, followers:followers + (followed ? -1 : 1) }));\r\n                \r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={()=>{handleClick(id)}} style={{ backgroundColor: followed ? '#5CD3A8' : '#EBD8FF' }}>\r\n        {followed ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"LoadMoreButton_button__D1C8V\"};","import css from './LoadMoreButton.module.css';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport { incrementLimit } from 'redux/currentLimit/currentLimitSlice';\r\nimport { fetchUsers } from 'redux/users/operations';\r\n\r\nconst LoadMoreButton =()=>{\r\nconst dispatch = useDispatch();\r\n\r\nconst limit = useSelector((state) => state.currentLimit.limit);\r\n\r\nconst handleIncrement=()=>{\r\n    dispatch(incrementLimit());\r\n    dispatch(fetchUsers(limit + 3));\r\n}\r\n\r\n    return(\r\n        <button type='button' onClick={handleIncrement} className={css.button}>LOAD MORE</button>\r\n\r\n    )\r\n};\r\nexport default LoadMoreButton;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__9ooOd\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from \"./Loader.module.css\";\r\nimport { ThreeDots  } from  'react-loader-spinner'\r\n\r\n\r\nconst Loader=({visible})=>{\r\n   \r\n    return(\r\n       <div className={css.loader}> <ThreeDots \r\n        height=\"80\" \r\n        width=\"80\" \r\n        radius=\"9\"\r\n        color=\"#5736A3\" \r\n        ariaLabel=\"three-dots-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClassName=\"\"\r\n        visible={visible}\r\n         />\r\n    </div>)\r\n       \r\n}\r\nLoader.propTypes={\r\n    visible: PropTypes.bool.isRequired\r\n}\r\nexport default Loader;","export const selectUsers = ({users:{items}}) => items;\r\nexport const selectIsLoading = ({users:{isLoading}}) => isLoading;\r\nexport const selectError = ({users:{error}}) => error;\r\n","import css from './Tweets.module.css';\r\nimport Card from 'components/Card';\r\nimport LoadMoreButton from 'components/LoadMoreButton';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"redux/store.js\";\r\n\r\n\r\nimport { useEffect } from \"react\";\r\nimport { fetchUsers } from \"redux/users/operations\";\r\nimport { resetLimit } from \"redux/currentLimit/currentLimitSlice\";\r\nimport { selectUsers, selectIsLoading, selectError } from 'redux/users/selectors';\r\n\r\nconst Tweets = () => {\r\n\r\nconst dispatch= useDispatch();\r\n\r\n     const users=useSelector(selectUsers);\r\n     const isLoading = useSelector(selectIsLoading);   \r\n     const error = useSelector(selectError);\r\n     const state = store.getState();\r\n     const limit=state.currentLimit.limit;\r\n\r\n     useEffect(() => {\r\n           \r\n      dispatch(fetchUsers(limit));\r\n     \r\n     }, [dispatch, limit]);\r\n\r\n\r\n\r\n  \r\n \r\n    return (<div className={css.container}>\r\n\r\n{isLoading && !error && <Loader visible={true}/>}\r\n          <ul className={css.users}>\r\n       { users.length>0 && users\r\n             .map(({  user,\r\n                id,\r\n                avatar,\r\n                followers,\r\n                tweets,isFollowed }) => (\r\n                    <li key={id} className={css.users_item}>\r\n                          <Card  user={user} avatar={avatar} followers={followers}\r\n       tweets={tweets}\r\n        id={id} isFollowed={isFollowed}/>\r\n                    </li>\r\n      \r\n             ))}\r\n        </ul>\r\n\r\n        <div className={css.buttons}>\r\n           <Link to=\"/\" className={css.button} onClick={() => { dispatch(resetLimit()) }}>Back</Link>\r\n        {limit>0&&limit<12&&<LoadMoreButton/>}\r\n        </div>\r\n\r\n       \r\n    </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default Tweets;"],"names":["_ref","user","id","avatar","followers","tweets","isFollowed","dispatch","useDispatch","followed","useSelector","state","follow","_jsxs","className","css","card","children","_jsx","src","alt","name","onClick","toggleFollow","changeFollowers","style","backgroundColor","limit","currentLimit","type","incrementLimit","fetchUsers","visible","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","selectUsers","users","items","selectIsLoading","_ref2","isLoading","selectError","_ref3","error","store","getState","useEffect","Loader","length","map","Card","Link","to","resetLimit","LoadMoreButton"],"sourceRoot":""}