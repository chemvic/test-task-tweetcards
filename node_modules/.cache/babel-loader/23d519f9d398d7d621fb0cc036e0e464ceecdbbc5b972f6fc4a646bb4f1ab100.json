{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchUsers, updateUser } from \"redux/users/operations\";\nconst initialState = {\n  items: [],\n  isFollowed: false,\n  isLoading: false,\n  error: null\n};\nconst handlePending = state => {\n  state.isLoading = true;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, handlePending).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = action.payload;\n      state.error = null;\n    }).addCase(updateUser.rejected, handleRejected).addCase(updateUser.pending, handlePending).addCase(updateUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = action.payload;\n      state.error = null;\n    });\n  }\n});\nexport const usersReducer = usersSlice.reducer;","map":{"version":3,"names":["createSlice","fetchUsers","updateUser","initialState","items","isFollowed","isLoading","error","handlePending","state","handleRejected","action","payload","usersSlice","name","extraReducers","builder","addCase","pending","fulfilled","rejected","usersReducer","reducer"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/redux/users/usersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {fetchUsers, updateUser} from \"redux/users/operations\";\r\n\r\nconst initialState={     \r\n      items: [],\r\n      isFollowed:false,\r\n      isLoading: false,\r\n      error: null\r\n  };\r\n   const handlePending = state => {\r\n    state.isLoading = true;\r\n  };\r\n  \r\n  const handleRejected = (state, action) => {\r\n    state.isLoading = false;\r\n    state.error = action.payload;    \r\n  };\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState, \r\n    extraReducers: (builder) =>{\r\n      builder\r\n      .addCase(fetchUsers.pending, handlePending)\r\n      .addCase(fetchUsers.fulfilled, (state, action)=>{\r\n        state.isLoading=false;\r\n        state.items=action.payload;\r\n        state.error=null;\r\n      })\r\n      .addCase(updateUser.rejected, handleRejected)\r\n      .addCase(updateUser.pending, handlePending)\r\n      .addCase(updateUser.fulfilled, (state, action)=>{\r\n        state.isLoading=false;\r\n        state.items=action.payload;\r\n        state.error=null;\r\n      })  \r\n    }\r\n  });\r\n\r\nexport const usersReducer = usersSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,UAAU,EAAEC,UAAU,QAAO,wBAAwB;AAE7D,MAAMC,YAAY,GAAC;EACbC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAC,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC9BA,KAAK,CAACH,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMI,cAAc,GAAGA,CAACD,KAAK,EAAEE,MAAM,KAAK;EACxCF,KAAK,CAACH,SAAS,GAAG,KAAK;EACvBG,KAAK,CAACF,KAAK,GAAGI,MAAM,CAACC,OAAO;AAC9B,CAAC;AAEH,MAAMC,UAAU,GAAGb,WAAW,CAAC;EAC3Bc,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,aAAa,EAAGC,OAAO,IAAI;IACzBA,OAAO,CACNC,OAAO,CAAChB,UAAU,CAACiB,OAAO,EAAEV,aAAa,CAAC,CAC1CS,OAAO,CAAChB,UAAU,CAACkB,SAAS,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAG;MAC9CF,KAAK,CAACH,SAAS,GAAC,KAAK;MACrBG,KAAK,CAACL,KAAK,GAACO,MAAM,CAACC,OAAO;MAC1BH,KAAK,CAACF,KAAK,GAAC,IAAI;IAClB,CAAC,CAAC,CACDU,OAAO,CAACf,UAAU,CAACkB,QAAQ,EAAEV,cAAc,CAAC,CAC5CO,OAAO,CAACf,UAAU,CAACgB,OAAO,EAAEV,aAAa,CAAC,CAC1CS,OAAO,CAACf,UAAU,CAACiB,SAAS,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAG;MAC9CF,KAAK,CAACH,SAAS,GAAC,KAAK;MACrBG,KAAK,CAACL,KAAK,GAACO,MAAM,CAACC,OAAO;MAC1BH,KAAK,CAACF,KAAK,GAAC,IAAI;IAClB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMc,YAAY,GAAGR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}