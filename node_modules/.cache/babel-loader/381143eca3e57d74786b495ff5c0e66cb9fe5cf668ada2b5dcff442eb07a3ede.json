{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemv\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\test-task-tweetcards\\\\test-task-tweetcards\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { toggleFollow } from 'redux/following/followSlice';\nimport { selectIsFollowed } from 'redux/following/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    user,\n    id,\n    avatar,\n    followers,\n    tweets\n  } = _ref;\n  const dispatch = useDispatch();\n  const isFollowed = useSelector(state => state.follow[id]);\n  console.log(isFollowed);\n  const handleClick = () => {\n    dispatch(toggleFollow(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: user,\n      className: css.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.name,\n      children: [tweets, \" tweets\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.followers,\n      children: [followers, \" followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleClick,\n      style: {\n        backgroundColor: isFollowed ? 'green' : 'gray'\n      },\n      children: isFollowed ? 'Following' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"afc9RluF4xsjaKOqewhji2v4R7I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Card;\nCard.propTypes = {\n  user: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["PropTypes","toggleFollow","selectIsFollowed","useSelector","useDispatch","css","jsxDEV","_jsxDEV","Card","_ref","_s","user","id","avatar","followers","tweets","dispatch","isFollowed","state","follow","console","log","handleClick","className","card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","style","backgroundColor","_c","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/components/Card/Card.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport {toggleFollow} from 'redux/following/followSlice';\r\nimport {selectIsFollowed} from 'redux/following/selectors';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport css from './Card.module.css';\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    }) => {\r\n        const dispatch=useDispatch();\r\n        const isFollowed=useSelector((state) => state.follow[id]);\r\n       console.log(isFollowed);\r\n        const handleClick = () => {\r\n            dispatch(toggleFollow(id));\r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={handleClick} style={{ backgroundColor: isFollowed ? 'green' : 'gray' }}>\r\n        {isFollowed ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAAQC,YAAY,QAAO,6BAA6B;AACxD,SAAQC,gBAAgB,QAAO,2BAA2B;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAS,aAAa;AACvD,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAGC,IAAA,IAMJ;EAAAC,EAAA;EAAA,IANK;IACXC,IAAI;IACJC,EAAE;IACFC,MAAM;IACNC,SAAS;IACTC;EACA,CAAC,GAAAN,IAAA;EACG,MAAMO,QAAQ,GAACZ,WAAW,CAAC,CAAC;EAC5B,MAAMa,UAAU,GAACd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACP,EAAE,CAAC,CAAC;EAC1DQ,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EACtB,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBN,QAAQ,CAACf,YAAY,CAACW,EAAE,CAAC,CAAC;EAC5B,CAAC;EAEP,oBACIL,OAAA;IAAKgB,SAAS,EAAElB,GAAG,CAACmB,IAAK;IAAAC,QAAA,gBAE7BlB,OAAA;MACEmB,GAAG,EAAEb,MAAO;MACZc,GAAG,EAAEhB,IAAK;MACVY,SAAS,EAAElB,GAAG,CAACQ;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFxB,OAAA;MAAGgB,SAAS,EAAElB,GAAG,CAAC2B,IAAK;MAAAP,QAAA,GAAEV,MAAM,EAAC,SAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3CxB,OAAA;MAAGgB,SAAS,EAAElB,GAAG,CAACS,SAAU;MAAAW,QAAA,GAAEX,SAAS,EAAC,YAAU;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDxB,OAAA;MAAQgB,SAAS,EAAC,QAAQ;MAACU,OAAO,EAAEX,WAAY;MAACY,KAAK,EAAE;QAAEC,eAAe,EAAElB,UAAU,GAAG,OAAO,GAAG;MAAO,CAAE;MAAAQ,QAAA,EACtGR,UAAU,GAAG,WAAW,GAAG;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEN,CAAC;AAACrB,EAAA,CA9BKF,IAAI;EAAA,QAOYJ,WAAW,EACTD,WAAW;AAAA;AAAAiC,EAAA,GAR7B5B,IAAI;AAgCXA,IAAI,CAAC6B,SAAS,GAAC;EACX1B,IAAI,EAAEX,SAAS,CAACsC,MAAM,CAACC,UAAU;EACjC1B,MAAM,EAAEb,SAAS,CAACsC,MAAM,CAACC,UAAU;EACnCxB,MAAM,EAAEf,SAAS,CAACwC,MAAM,CAACD,UAAU;EACnCzB,SAAS,EAAEd,SAAS,CAACwC,MAAM,CAACD,UAAU;EACtC3B,EAAE,EAAEZ,SAAS,CAACsC,MAAM,CAACC;AACzB,CAAC;AACD,eAAe/B,IAAI;AAAC,IAAA4B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}