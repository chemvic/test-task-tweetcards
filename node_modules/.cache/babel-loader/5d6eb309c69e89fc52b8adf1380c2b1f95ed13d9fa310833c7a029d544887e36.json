{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemv\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\test-task-tweetcards\\\\test-task-tweetcards\\\\src\\\\components\\\\Card\\\\Card.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  let {\n    user,\n    id,\n    avatar,\n    followers,\n    tweets\n  } = _ref;\n  const handleClick = () => {\n    dispatch(toggleFollow());\n    // setFollowers(followers + (isFollowing ? -1 : 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: user,\n      className: css.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.name,\n      children: [tweets, \" tweets\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.followers,\n      children: [followers, \" followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleClick,\n      style: {\n        backgroundColor: isFollowing ? 'green' : 'gray'\n      },\n      children: isFollowing ? 'Following' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nCard.propTypes = {\n  user: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["PropTypes","css","jsxDEV","_jsxDEV","Card","_ref","user","id","avatar","followers","tweets","handleClick","dispatch","toggleFollow","className","card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","style","backgroundColor","isFollowing","_c","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/components/Card/Card.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Card.module.css';\r\n\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    }) => {\r\n        const handleClick = () => {\r\n            dispatch(toggleFollow());\r\n            // setFollowers(followers + (isFollowing ? -1 : 1));\r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={handleClick} style={{ backgroundColor: isFollowing ? 'green' : 'gray' }}>\r\n        {isFollowing ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,IAAI,GAAGC,IAAA,IAMJ;EAAA,IANK;IACXC,IAAI;IACJC,EAAE;IACFC,MAAM;IACNC,SAAS;IACTC;EACA,CAAC,GAAAL,IAAA;EACG,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtBC,QAAQ,CAACC,YAAY,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;;EAEP,oBACIV,OAAA;IAAKW,SAAS,EAAEb,GAAG,CAACc,IAAK;IAAAC,QAAA,gBAE7Bb,OAAA;MACEc,GAAG,EAAET,MAAO;MACZU,GAAG,EAAEZ,IAAK;MACVQ,SAAS,EAAEb,GAAG,CAACO;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFnB,OAAA;MAAGW,SAAS,EAAEb,GAAG,CAACsB,IAAK;MAAAP,QAAA,GAAEN,MAAM,EAAC,SAAO;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3CnB,OAAA;MAAGW,SAAS,EAAEb,GAAG,CAACQ,SAAU;MAAAO,QAAA,GAAEP,SAAS,EAAC,YAAU;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDnB,OAAA;MAAQW,SAAS,EAAC,QAAQ;MAACU,OAAO,EAAEb,WAAY;MAACc,KAAK,EAAE;QAAEC,eAAe,EAAEC,WAAW,GAAG,OAAO,GAAG;MAAO,CAAE;MAAAX,QAAA,EACvGW,WAAW,GAAG,WAAW,GAAG;IAAQ;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEN,CAAC;AAACM,EAAA,GA5BKxB,IAAI;AA8BXA,IAAI,CAACyB,SAAS,GAAC;EACXvB,IAAI,EAAEN,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACjCvB,MAAM,EAAER,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACnCrB,MAAM,EAAEV,SAAS,CAACgC,MAAM,CAACD,UAAU;EACnCtB,SAAS,EAAET,SAAS,CAACgC,MAAM,CAACD,UAAU;EACtCxB,EAAE,EAAEP,SAAS,CAAC8B,MAAM,CAACC;AACzB,CAAC;AACD,eAAe3B,IAAI;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}