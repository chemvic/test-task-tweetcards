{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemv\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\test-task-tweetcards\\\\test-task-tweetcards\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { toggleFollow } from 'redux/following/followSlice';\nimport { updateUser } from 'redux/users/operations';\n// import {selectIsFollowed} from 'redux/following/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    user,\n    id,\n    avatar,\n    followers,\n    tweets\n  } = _ref;\n  const dispatch = useDispatch();\n  const isFollowed = useSelector(state => state.follow[id]);\n  let newData = {};\n  if (!isFollowed) {\n    newData = {\n      followers: followers + 1,\n      followed: true\n    };\n  } else {\n    newData = {\n      followers: followers - 1,\n      followed: false\n    };\n  }\n  const handleClick = () => {\n    console.log(followers);\n    console.log(newData);\n    dispatch(toggleFollow(id));\n    dispatch(updateUser(id, newData));\n    console.log('после', newData);\n    console.log('после', followers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: user,\n      className: css.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.name,\n      children: [tweets, \" tweets\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.followers,\n      children: [followers, \" followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        handleClick();\n      },\n      style: {\n        backgroundColor: isFollowed ? '#5CD3A8' : '#EBD8FF'\n      },\n      children: isFollowed ? 'Following' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"afc9RluF4xsjaKOqewhji2v4R7I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Card;\nCard.propTypes = {\n  user: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["PropTypes","toggleFollow","updateUser","useSelector","useDispatch","css","jsxDEV","_jsxDEV","Card","_ref","_s","user","id","avatar","followers","tweets","dispatch","isFollowed","state","follow","newData","followed","handleClick","console","log","className","card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","style","backgroundColor","_c","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/components/Card/Card.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport {toggleFollow} from 'redux/following/followSlice';\r\nimport { updateUser } from 'redux/users/operations';\r\n// import {selectIsFollowed} from 'redux/following/selectors';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport css from './Card.module.css';\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    }) => {\r\n        const dispatch=useDispatch();\r\n        const isFollowed=useSelector((state) => state.follow[id]);\r\n\r\n        let newData={};\r\n\r\n        if(!isFollowed){\r\n             newData={\r\n                \r\n                    followers: followers+1,\r\n                    followed: true,\r\n                  \r\n            }\r\n        }else{\r\n            newData={\r\n                \r\n                    followers: followers-1,\r\n                    followed: false,\r\n            \r\n        }}\r\n    \r\n        const handleClick = () => {\r\n            console.log(followers);\r\n            console.log(newData);\r\n            dispatch(toggleFollow(id));\r\n            dispatch(updateUser(id, newData));\r\n            console.log('после',newData);\r\n            console.log('после', followers);\r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={()=>{handleClick()}} style={{ backgroundColor: isFollowed ? '#5CD3A8' : '#EBD8FF' }}>\r\n        {isFollowed ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}