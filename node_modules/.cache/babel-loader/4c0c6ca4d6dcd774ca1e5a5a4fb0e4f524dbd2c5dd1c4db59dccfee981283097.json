{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemv\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\test-task-tweetcards\\\\test-task-tweetcards\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport css from './Card.module.css';\nimport { selectIsFollowing } from 'redux/following/selectors';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    user,\n    id,\n    avatar,\n    followers,\n    tweets\n  } = _ref;\n  const isFollowing = useSelector(selectIsFollowing);\n  const handleClick = () => {\n    dispatch(toggleFollow());\n    // setFollowers(followers + (isFollowing ? -1 : 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: user,\n      className: css.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.name,\n      children: [tweets, \" tweets\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.followers,\n      children: [followers, \" followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleClick,\n      style: {\n        backgroundColor: isFollowing ? 'green' : 'gray'\n      },\n      children: isFollowing ? 'Following' : 'Follow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"0TE9WYuqIOZlVEa/Y0pGrXiFkuo=\", false, function () {\n  return [useSelector];\n});\n_c = Card;\nCard.propTypes = {\n  user: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["PropTypes","css","selectIsFollowing","useSelector","jsxDEV","_jsxDEV","Card","_ref","_s","user","id","avatar","followers","tweets","isFollowing","handleClick","dispatch","toggleFollow","className","card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","style","backgroundColor","_c","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/components/Card/Card.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Card.module.css';\r\nimport {selectIsFollowing} from 'redux/following/selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    }) => {\r\n\r\n        const isFollowing=useSelector(selectIsFollowing);\r\n        const handleClick = () => {\r\n            dispatch(toggleFollow());\r\n            // setFollowers(followers + (isFollowing ? -1 : 1));\r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={handleClick} style={{ backgroundColor: isFollowing ? 'green' : 'gray' }}>\r\n        {isFollowing ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAAQC,iBAAiB,QAAO,2BAA2B;AAC3D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,IAAI,GAAGC,IAAA,IAMJ;EAAAC,EAAA;EAAA,IANK;IACXC,IAAI;IACJC,EAAE;IACFC,MAAM;IACNC,SAAS;IACTC;EACA,CAAC,GAAAN,IAAA;EAEG,MAAMO,WAAW,GAACX,WAAW,CAACD,iBAAiB,CAAC;EAChD,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACtBC,QAAQ,CAACC,YAAY,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;;EAEP,oBACIZ,OAAA;IAAKa,SAAS,EAAEjB,GAAG,CAACkB,IAAK;IAAAC,QAAA,gBAE7Bf,OAAA;MACEgB,GAAG,EAAEV,MAAO;MACZW,GAAG,EAAEb,IAAK;MACVS,SAAS,EAAEjB,GAAG,CAACU;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFrB,OAAA;MAAGa,SAAS,EAAEjB,GAAG,CAAC0B,IAAK;MAAAP,QAAA,GAAEP,MAAM,EAAC,SAAO;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3CrB,OAAA;MAAGa,SAAS,EAAEjB,GAAG,CAACW,SAAU;MAAAQ,QAAA,GAAER,SAAS,EAAC,YAAU;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDrB,OAAA;MAAQa,SAAS,EAAC,QAAQ;MAACU,OAAO,EAAEb,WAAY;MAACc,KAAK,EAAE;QAAEC,eAAe,EAAEhB,WAAW,GAAG,OAAO,GAAG;MAAO,CAAE;MAAAM,QAAA,EACvGN,WAAW,GAAG,WAAW,GAAG;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEN,CAAC;AAAClB,EAAA,CA9BKF,IAAI;EAAA,QAQeH,WAAW;AAAA;AAAA4B,EAAA,GAR9BzB,IAAI;AAgCXA,IAAI,CAAC0B,SAAS,GAAC;EACXvB,IAAI,EAAET,SAAS,CAACiC,MAAM,CAACC,UAAU;EACjCvB,MAAM,EAAEX,SAAS,CAACiC,MAAM,CAACC,UAAU;EACnCrB,MAAM,EAAEb,SAAS,CAACmC,MAAM,CAACD,UAAU;EACnCtB,SAAS,EAAEZ,SAAS,CAACmC,MAAM,CAACD,UAAU;EACtCxB,EAAE,EAAEV,SAAS,CAACiC,MAAM,CAACC;AACzB,CAAC;AACD,eAAe5B,IAAI;AAAC,IAAAyB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}