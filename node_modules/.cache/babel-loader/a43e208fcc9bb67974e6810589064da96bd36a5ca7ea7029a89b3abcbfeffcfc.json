{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchUsers = createAsyncThunk(\"users/fetchAll\", async function () {\n  let currentLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  let thunkAPI = arguments.length > 1 ? arguments[1] : undefined;\n  try {\n    const baseURL = \"https://64635cbe4dca1a66135b925a.mockapi.io\";\n    const url = `${baseURL}/users?page=1&limit=${currentLimit}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const updateUser = createAsyncThunk(\"users/updateUser \", async (user, thunkAPI) => {\n  try {\n    const response = await axios.patch(`/users/${user.id}`);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["axios","createAsyncThunk","fetchUsers","currentLimit","arguments","length","undefined","thunkAPI","baseURL","url","response","get","data","error","rejectWithValue","message","updateUser","user","patch","id"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/redux/users/operations.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\n\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchAll\", async (currentLimit=3, thunkAPI) => {\r\n  try {\r\n    \r\n    const baseURL = \"https://64635cbe4dca1a66135b925a.mockapi.io\";\r\n\r\n    const url =`${baseURL}/users?page=1&limit=${currentLimit}`;\r\n\r\n\r\n     const response = await axios.get(url);\r\n      return response.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.message);\r\n  } \r\n});\r\n\r\nexport const updateUser = createAsyncThunk(\"users/updateUser \", async (user, thunkAPI) => {\r\n  try {\r\n     const response = await axios.patch(`/users/${user.id}`);\r\n      return response.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.message);\r\n  } \r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AAKnD,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,gBAAgB,EAAE,kBAAoC;EAAA,IAA7BE,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1F,IAAI;IAEF,MAAME,OAAO,GAAG,6CAA6C;IAE7D,MAAMC,GAAG,GAAG,GAAED,OAAQ,uBAAsBL,YAAa,EAAC;IAGzD,MAAMO,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACF,GAAG,CAAC;IACpC,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGf,gBAAgB,CAAC,mBAAmB,EAAE,OAAOgB,IAAI,EAAEV,QAAQ,KAAK;EACxF,IAAI;IACD,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACkB,KAAK,CAAE,UAASD,IAAI,CAACE,EAAG,EAAC,CAAC;IACtD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}