{"ast":null,"code":"import{toggleFollow}from'redux/following/followSlice';import{updateUser}from'redux/users/operations';// import {selectIsFollowed} from 'redux/following/selectors';\nimport{useSelector,useDispatch}from'react-redux';import{changeFollowers}from'redux/users/usersSlice';import css from'./Card.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Card=function Card(_ref){var user=_ref.user,id=_ref.id,avatar=_ref.avatar,followers=_ref.followers,tweets=_ref.tweets,isFollowed=_ref.isFollowed;var dispatch=useDispatch();var followed=useSelector(function(state){return state.follow[id];});var newData={};if(!isFollowed){newData={followers:700,isFollowed:true};}else{newData={followers:700,isFollowed:false};}var handleClick=function handleClick(){dispatch(toggleFollow(id));//     dispatch(updateUser(id, {\n//         followers:700,\n//         isFollowed: true,\n// }));\ndispatch(changeFollowers({id:id,followers:followers+(followed?-1:1)}));};return/*#__PURE__*/_jsxs(\"div\",{className:css.card,children:[/*#__PURE__*/_jsx(\"img\",{src:avatar,alt:user,className:css.avatar}),/*#__PURE__*/_jsxs(\"p\",{className:css.name,children:[tweets,\" tweets\"]}),/*#__PURE__*/_jsxs(\"p\",{className:css.followers,children:[followers,\" followers\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:function onClick(){handleClick(id);},style:{backgroundColor:followed?'#5CD3A8':'#EBD8FF'},children:followed?'Following':'Follow'})]});};export default Card;","map":{"version":3,"names":["toggleFollow","updateUser","useSelector","useDispatch","changeFollowers","css","jsx","_jsx","jsxs","_jsxs","Card","_ref","user","id","avatar","followers","tweets","isFollowed","dispatch","followed","state","follow","newData","handleClick","className","card","children","src","alt","name","onClick","style","backgroundColor"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/components/Card/Card.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport {toggleFollow} from 'redux/following/followSlice';\r\nimport { updateUser } from 'redux/users/operations';\r\n// import {selectIsFollowed} from 'redux/following/selectors';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport { changeFollowers } from 'redux/users/usersSlice';\r\nimport css from './Card.module.css';\r\n\r\n const Card = ({\r\n    user,\r\n    id,\r\n    avatar,\r\n    followers,\r\n    tweets,\r\n    isFollowed\r\n    }) => {\r\n        const dispatch=useDispatch();\r\n        const followed=useSelector((state) => state.follow[id]);\r\n\r\n        let newData={};\r\n\r\n        if(!isFollowed){\r\n             newData={\r\n                \r\n                    followers:700,\r\n                    isFollowed: true,\r\n                  \r\n            }\r\n        }else{\r\n            newData={\r\n                \r\n                    followers:700,\r\n                    isFollowed: false,\r\n            \r\n        }}\r\n    \r\n        const handleClick = () => {\r\n      \r\n            dispatch(toggleFollow(id));\r\n        //     dispatch(updateUser(id, {\r\n                \r\n        //         followers:700,\r\n        //         isFollowed: true,\r\n              \r\n        // }));\r\n           \r\n            dispatch(changeFollowers({ id, followers:followers + (followed ? -1 : 1) }));\r\n                \r\n          };\r\n        \r\n    return (\r\n        <div className={css.card}>\r\n \r\n    <img\r\n      src={avatar}\r\n      alt={user}\r\n      className={css.avatar} \r\n    />\r\n    <p className={css.name}>{tweets} tweets</p>\r\n    <p className={css.followers}>{followers} followers</p>\r\n    <button className='button' onClick={()=>{handleClick(id)}} style={{ backgroundColor: followed ? '#5CD3A8' : '#EBD8FF' }}>\r\n        {followed ? 'Following' : 'Follow'}\r\n      </button>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nCard.propTypes={\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}\r\nexport default Card;\r\n"],"mappings":"AACA,OAAQA,YAAY,KAAO,6BAA6B,CACxD,OAASC,UAAU,KAAQ,wBAAwB,CACnD;AACA,OAASC,WAAW,CAAEC,WAAW,KAAS,aAAa,CACvD,OAASC,eAAe,KAAQ,wBAAwB,CACxD,MAAO,CAAAC,GAAG,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAAC,IAAA,CAOD,IANN,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CACJC,EAAE,CAAAF,IAAA,CAAFE,EAAE,CACFC,MAAM,CAAAH,IAAA,CAANG,MAAM,CACNC,SAAS,CAAAJ,IAAA,CAATI,SAAS,CACTC,MAAM,CAAAL,IAAA,CAANK,MAAM,CACNC,UAAU,CAAAN,IAAA,CAAVM,UAAU,CAEN,GAAM,CAAAC,QAAQ,CAACf,WAAW,CAAC,CAAC,CAC5B,GAAM,CAAAgB,QAAQ,CAACjB,WAAW,CAAC,SAACkB,KAAK,QAAK,CAAAA,KAAK,CAACC,MAAM,CAACR,EAAE,CAAC,GAAC,CAEvD,GAAI,CAAAS,OAAO,CAAC,CAAC,CAAC,CAEd,GAAG,CAACL,UAAU,CAAC,CACVK,OAAO,CAAC,CAEDP,SAAS,CAAC,GAAG,CACbE,UAAU,CAAE,IAEpB,CAAC,CACL,CAAC,IAAI,CACDK,OAAO,CAAC,CAEAP,SAAS,CAAC,GAAG,CACbE,UAAU,CAAE,KAExB,CAAC,EAED,GAAM,CAAAM,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CAEtBL,QAAQ,CAAClB,YAAY,CAACa,EAAE,CAAC,CAAC,CAC9B;AAEA;AACA;AAEA;AAEIK,QAAQ,CAACd,eAAe,CAAC,CAAES,EAAE,CAAFA,EAAE,CAAEE,SAAS,CAACA,SAAS,EAAII,QAAQ,CAAG,CAAC,CAAC,CAAG,CAAC,CAAE,CAAC,CAAC,CAAC,CAE9E,CAAC,CAEP,mBACIV,KAAA,QAAKe,SAAS,CAAEnB,GAAG,CAACoB,IAAK,CAAAC,QAAA,eAE7BnB,IAAA,QACEoB,GAAG,CAAEb,MAAO,CACZc,GAAG,CAAEhB,IAAK,CACVY,SAAS,CAAEnB,GAAG,CAACS,MAAO,CACvB,CAAC,cACFL,KAAA,MAAGe,SAAS,CAAEnB,GAAG,CAACwB,IAAK,CAAAH,QAAA,EAAEV,MAAM,CAAC,SAAO,EAAG,CAAC,cAC3CP,KAAA,MAAGe,SAAS,CAAEnB,GAAG,CAACU,SAAU,CAAAW,QAAA,EAAEX,SAAS,CAAC,YAAU,EAAG,CAAC,cACtDR,IAAA,WAAQiB,SAAS,CAAC,QAAQ,CAACM,OAAO,CAAE,SAAAA,QAAA,CAAI,CAACP,WAAW,CAACV,EAAE,CAAC,EAAE,CAACkB,KAAK,CAAE,CAAEC,eAAe,CAAEb,QAAQ,CAAG,SAAS,CAAG,SAAU,CAAE,CAAAO,QAAA,CACnHP,QAAQ,CAAG,WAAW,CAAG,QAAQ,CAC5B,CAAC,EAEV,CAAC,CAEN,CAAC,CASD,cAAe,CAAAT,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}