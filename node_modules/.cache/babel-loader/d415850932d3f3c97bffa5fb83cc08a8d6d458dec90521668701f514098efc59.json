{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemv\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\test-task-tweetcards\\\\test-task-tweetcards\\\\src\\\\pages\\\\Tweets\\\\Tweets.jsx\",\n  _s = $RefreshSig$();\nimport css from './Tweets.module.css';\nimport Card from 'components/Card';\nimport Loader from '../Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { fetchUsers } from \"redux/users/operations\";\nimport { selectUsers, selectIsLoading, selectError } from 'redux/users/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  const users = useSelector(selectUsers);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [isLoading && !error && /*#__PURE__*/_jsxDEV(Loader, {\n      visible: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.users,\n      children: users.map(_ref => {\n        let {\n          user,\n          id,\n          avatar,\n          followers,\n          tweets\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          user: user,\n          avatar: avatar,\n          followers: followers,\n          tweets: tweets,\n          id: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n_s(Tweets, \"7QCP5v0eaE6FsDw2lXZlYPfKHZs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["css","Card","Loader","useSelector","useDispatch","useEffect","fetchUsers","selectUsers","selectIsLoading","selectError","jsxDEV","_jsxDEV","Tweets","_s","dispatch","users","isLoading","error","className","container","children","visible","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","user","id","avatar","followers","tweets","_c","$RefreshReg$"],"sources":["C:/Users/chemv/OneDrive/Documents/GitHub/React/test-task-tweetcards/test-task-tweetcards/src/pages/Tweets/Tweets.jsx"],"sourcesContent":["import css from './Tweets.module.css';\r\nimport Card from 'components/Card';\r\nimport Loader from '../Loader/Loader';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from \"react\";\r\nimport { fetchUsers } from \"redux/users/operations\";\r\nimport { selectUsers, selectIsLoading, selectError } from 'redux/users/selectors';\r\n\r\n\r\n const Tweets = () => {\r\nconst dispatch= useDispatch();\r\n\r\n     useEffect(() => {\r\n      dispatch(fetchUsers());\r\n     }, [dispatch]);\r\n\r\n     const users=useSelector(selectUsers);\r\n     const isLoading = useSelector(selectIsLoading);   \r\n     const error = useSelector(selectError);  \r\n  \r\n    return (<div className={css.container}>\r\n\r\n{isLoading && !error && <Loader visible={true}/>}\r\n          <ul className={css.users}>\r\n        {users\r\n             .map(({  user,\r\n                id,\r\n                avatar,\r\n                followers,\r\n                tweets}) => (\r\n       <Card key={id} user={user} avatar={avatar} followers={followers}\r\n       tweets={tweets}\r\n        id={id}/>\r\n             ))}\r\n        </ul>\r\n    </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default Tweets;"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,WAAW,EAAEC,eAAe,EAAEC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAEV,WAAW,CAAC,CAAC;EAExBC,SAAS,CAAC,MAAM;IACfS,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,MAAMC,KAAK,GAACZ,WAAW,CAACI,WAAW,CAAC;EACpC,MAAMS,SAAS,GAAGb,WAAW,CAACK,eAAe,CAAC;EAC9C,MAAMS,KAAK,GAAGd,WAAW,CAACM,WAAW,CAAC;EAEvC,oBAAQE,OAAA;IAAKO,SAAS,EAAElB,GAAG,CAACmB,SAAU;IAAAC,QAAA,GAEzCJ,SAAS,IAAI,CAACC,KAAK,iBAAIN,OAAA,CAACT,MAAM;MAACmB,OAAO,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtCd,OAAA;MAAIO,SAAS,EAAElB,GAAG,CAACe,KAAM;MAAAK,QAAA,EAC1BL,KAAK,CACAW,GAAG,CAACC,IAAA;QAAA,IAAC;UAAGC,IAAI;UACVC,EAAE;UACFC,MAAM;UACNC,SAAS;UACTC;QAAM,CAAC,GAAAL,IAAA;QAAA,oBAChBhB,OAAA,CAACV,IAAI;UAAU2B,IAAI,EAAEA,IAAK;UAACE,MAAM,EAAEA,MAAO;UAACC,SAAS,EAAEA,SAAU;UAChEC,MAAM,EAAEA,MAAO;UACdH,EAAE,EAAEA;QAAG,GAFGA,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEJ,CAAC;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAACZ,EAAA,CA7BKD,MAAM;EAAA,QACGR,WAAW,EAMVD,WAAW,EACLA,WAAW,EACfA,WAAW;AAAA;AAAA8B,EAAA,GATvBrB,MAAM;AA+Bb,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}